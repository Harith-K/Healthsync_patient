name: Build and Deploy Docker Image with MySQL

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Create .env file for Docker
    - name: Create .env file
      run: |
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
        echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}" >> .env

    # Step 6: Debug .env file (Optional, remove in production)
    - name: Debug .env file
      run: cat .env

    # Step 7: Build Docker image
    - name: Build Docker image
      run: docker build -t harithchin1673/patient-service:latest .

    # Step 8: Run Docker container
    - name: Run Docker container
      run: |
        docker run -d -p 8000:8000 \
          --name patient-service \
          --env-file .env \
          harithchin1673/patient-service:latest

    # Step 9: Wait for the container to be ready
    - name: Wait for patient-service container
      run: |
        until docker exec patient-service python manage.py check; do
          echo "Waiting for patient-service container to be ready..."
          sleep 5
        done

    # Step 10: Apply database migrations
    - name: Apply migrations
      run: docker exec patient-service python manage.py migrate

    # Step 11: Run integration tests (optional)
    - name: Run tests
      run: docker exec patient-service python manage.py test

    # Step 12: Push Docker image
    - name: Push Docker image
      run: docker push harithchin1673/patient-service:latest

    # Step 13: Debug - List running containers
    - name: List running containers
      run: docker ps -a
